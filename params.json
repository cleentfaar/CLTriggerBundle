{"name":"TriggerBundle","tagline":"A Symfony bundle that let's you execute handlers on incoming GET-parameters independant of a route/controller (a.k.a before filters)","body":"# TriggerBundle [![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](https://github.com/cleentfaar/CLTriggerBundle/tree/master/LICENSE.md)\r\n\r\nA Symfony bundle that let's you execute handlers on incoming GET parameters; optionally letting you redirect\r\nthe client back to an URL with certain parameters stripped.\r\n\r\n[![Build Status](https://img.shields.io/travis/cleentfaar/CLTriggerBundle/master.svg?style=flat-square)](https://travis-ci.org/cleentfaar/CLTriggerBundle)\r\n[![Coverage Status](https://img.shields.io/scrutinizer/coverage/g/cleentfaar/CLTriggerBundle.svg?style=flat-square)](https://scrutinizer-ci.com/g/cleentfaar/CLTriggerBundle/code-structure)\r\n[![Quality Score](https://img.shields.io/scrutinizer/g/cleentfaar/CLTriggerBundle.svg?style=flat-square)](https://scrutinizer-ci.com/g/cleentfaar/CLTriggerBundle)\r\n[![Latest Version](https://img.shields.io/github/release/cleentfaar/CLTriggerBundle.svg?style=flat-square)](https://github.com/cleentfaar/CLTriggerBundle/releases)\r\n[![Total Downloads](https://img.shields.io/packagist/dt/cleentfaar/trigger-bundle.svg?style=flat-square)](https://packagist.org/packages/cleentfaar/trigger-bundle)\r\n\r\n\r\n### Documentation\r\n\r\n- [Installation](https://github.com/cleentfaar/CLTriggerBundle/Resources/doc/installation.md)\r\n- [Usage](https://github.com/cleentfaar/CLTriggerBundle/Resources/doc/usage.md)\r\n\r\n\r\n### Why not just create my own request listeners, and do what I want from there?\r\n\r\nYou can of course still do this, and in some specific situations you might need that level of control.\r\n\r\nIn my projects however, I've noticed that often I just need to execute some business logic and then redirect\r\nthe user back to the url without that parameter.\r\n\r\nFurthermore, the intend of this bundle is to make it easy to have multiple services handle the same request\r\nand apply their own logic, instead of making multiple request-listeners with all kinds of different scenarios, each\r\nhooking into every request coming through your application! It also helps repeating code to check whether the request is\r\nusing the GET-method, your parameter is available in the query string, etc.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}